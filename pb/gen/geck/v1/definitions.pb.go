// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: geck/v1/definitions.proto

package geckpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	DataType_DATATYPE_UNKNOWN DataType = 0
	DataType_U8               DataType = 1
	DataType_U16              DataType = 2
	DataType_U32              DataType = 3
	DataType_U64              DataType = 4
	DataType_I8               DataType = 5
	DataType_I16              DataType = 6
	DataType_I32              DataType = 7
	DataType_I64              DataType = 8
	DataType_F32              DataType = 9
	DataType_F64              DataType = 10
	DataType_STRING           DataType = 11
	DataType_BYTES            DataType = 12
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "DATATYPE_UNKNOWN",
		1:  "U8",
		2:  "U16",
		3:  "U32",
		4:  "U64",
		5:  "I8",
		6:  "I16",
		7:  "I32",
		8:  "I64",
		9:  "F32",
		10: "F64",
		11: "STRING",
		12: "BYTES",
	}
	DataType_value = map[string]int32{
		"DATATYPE_UNKNOWN": 0,
		"U8":               1,
		"U16":              2,
		"U32":              3,
		"U64":              4,
		"I8":               5,
		"I16":              6,
		"I32":              7,
		"I64":              8,
		"F32":              9,
		"F64":              10,
		"STRING":           11,
		"BYTES":            12,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_geck_v1_definitions_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_geck_v1_definitions_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{0}
}

type QueryDefinition_Op int32

const (
	QueryDefinition_AND QueryDefinition_Op = 0
	QueryDefinition_OR  QueryDefinition_Op = 1
	QueryDefinition_NOT QueryDefinition_Op = 2
)

// Enum value maps for QueryDefinition_Op.
var (
	QueryDefinition_Op_name = map[int32]string{
		0: "AND",
		1: "OR",
		2: "NOT",
	}
	QueryDefinition_Op_value = map[string]int32{
		"AND": 0,
		"OR":  1,
		"NOT": 2,
	}
)

func (x QueryDefinition_Op) Enum() *QueryDefinition_Op {
	p := new(QueryDefinition_Op)
	*p = x
	return p
}

func (x QueryDefinition_Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryDefinition_Op) Descriptor() protoreflect.EnumDescriptor {
	return file_geck_v1_definitions_proto_enumTypes[1].Descriptor()
}

func (QueryDefinition_Op) Type() protoreflect.EnumType {
	return &file_geck_v1_definitions_proto_enumTypes[1]
}

func (x QueryDefinition_Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryDefinition_Op.Descriptor instead.
func (QueryDefinition_Op) EnumDescriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 0}
}

type FieldDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type        DataType `protobuf:"varint,2,opt,name=type,proto3,enum=geck.v1.DataType" json:"type,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *FieldDefinition) Reset() {
	*x = FieldDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDefinition) ProtoMessage() {}

func (x *FieldDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDefinition.ProtoReflect.Descriptor instead.
func (*FieldDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{0}
}

func (x *FieldDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDefinition) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_DATATYPE_UNKNOWN
}

func (x *FieldDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ComponentDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Fields      []*FieldDefinition `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ComponentDefinition) Reset() {
	*x = ComponentDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDefinition) ProtoMessage() {}

func (x *ComponentDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDefinition.ProtoReflect.Descriptor instead.
func (*ComponentDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{1}
}

func (x *ComponentDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComponentDefinition) GetFields() []*FieldDefinition {
	if x != nil {
		return x.Fields
	}
	return nil
}

type StateDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	States      []string `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *StateDefinition) Reset() {
	*x = StateDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDefinition) ProtoMessage() {}

func (x *StateDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDefinition.ProtoReflect.Descriptor instead.
func (*StateDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{2}
}

func (x *StateDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StateDefinition) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

type QueryDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Group       *QueryDefinition_Group `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *QueryDefinition) Reset() {
	*x = QueryDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition) ProtoMessage() {}

func (x *QueryDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition.ProtoReflect.Descriptor instead.
func (*QueryDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3}
}

func (x *QueryDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QueryDefinition) GetGroup() *QueryDefinition_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type BundleDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Components  []*ComponentDefinition `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
	States      []*StateDefinition     `protobuf:"bytes,4,rep,name=states,proto3" json:"states,omitempty"`
	Queries     []*QueryDefinition     `protobuf:"bytes,5,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *BundleDefinition) Reset() {
	*x = BundleDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleDefinition) ProtoMessage() {}

func (x *BundleDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleDefinition.ProtoReflect.Descriptor instead.
func (*BundleDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{4}
}

func (x *BundleDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BundleDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BundleDefinition) GetComponents() []*ComponentDefinition {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *BundleDefinition) GetStates() []*StateDefinition {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *BundleDefinition) GetQueries() []*QueryDefinition {
	if x != nil {
		return x.Queries
	}
	return nil
}

type QueryDefinition_Term struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsMutable  bool   `protobuf:"varint,2,opt,name=is_mutable,json=isMutable,proto3" json:"is_mutable,omitempty"`
	IsOptional bool   `protobuf:"varint,3,opt,name=is_optional,json=isOptional,proto3" json:"is_optional,omitempty"`
}

func (x *QueryDefinition_Term) Reset() {
	*x = QueryDefinition_Term{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition_Term) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition_Term) ProtoMessage() {}

func (x *QueryDefinition_Term) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition_Term.ProtoReflect.Descriptor instead.
func (*QueryDefinition_Term) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 0}
}

func (x *QueryDefinition_Term) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryDefinition_Term) GetIsMutable() bool {
	if x != nil {
		return x.IsMutable
	}
	return false
}

func (x *QueryDefinition_Term) GetIsOptional() bool {
	if x != nil {
		return x.IsOptional
	}
	return false
}

type QueryDefinition_Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*QueryDefinition_Group `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *QueryDefinition_Groups) Reset() {
	*x = QueryDefinition_Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition_Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition_Groups) ProtoMessage() {}

func (x *QueryDefinition_Groups) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition_Groups.ProtoReflect.Descriptor instead.
func (*QueryDefinition_Groups) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 1}
}

func (x *QueryDefinition_Groups) GetGroups() []*QueryDefinition_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type QueryDefinition_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op QueryDefinition_Op `protobuf:"varint,1,opt,name=op,proto3,enum=geck.v1.QueryDefinition_Op" json:"op,omitempty"`
	// Types that are assignable to T:
	//
	//	*QueryDefinition_Group_Term
	//	*QueryDefinition_Group_Groups
	T isQueryDefinition_Group_T `protobuf_oneof:"t"`
}

func (x *QueryDefinition_Group) Reset() {
	*x = QueryDefinition_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition_Group) ProtoMessage() {}

func (x *QueryDefinition_Group) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition_Group.ProtoReflect.Descriptor instead.
func (*QueryDefinition_Group) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 2}
}

func (x *QueryDefinition_Group) GetOp() QueryDefinition_Op {
	if x != nil {
		return x.Op
	}
	return QueryDefinition_AND
}

func (m *QueryDefinition_Group) GetT() isQueryDefinition_Group_T {
	if m != nil {
		return m.T
	}
	return nil
}

func (x *QueryDefinition_Group) GetTerm() *QueryDefinition_Term {
	if x, ok := x.GetT().(*QueryDefinition_Group_Term); ok {
		return x.Term
	}
	return nil
}

func (x *QueryDefinition_Group) GetGroups() *QueryDefinition_Groups {
	if x, ok := x.GetT().(*QueryDefinition_Group_Groups); ok {
		return x.Groups
	}
	return nil
}

type isQueryDefinition_Group_T interface {
	isQueryDefinition_Group_T()
}

type QueryDefinition_Group_Term struct {
	Term *QueryDefinition_Term `protobuf:"bytes,2,opt,name=term,proto3,oneof"`
}

type QueryDefinition_Group_Groups struct {
	Groups *QueryDefinition_Groups `protobuf:"bytes,3,opt,name=groups,proto3,oneof"`
}

func (*QueryDefinition_Group_Term) isQueryDefinition_Group_T() {}

func (*QueryDefinition_Group_Groups) isQueryDefinition_Group_T() {}

var File_geck_v1_definitions_proto protoreflect.FileDescriptor

var file_geck_v1_definitions_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x65, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x65, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x22, 0x6e, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x22, 0xe7, 0x03, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x1a, 0x5a, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x1a, 0x40, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x65, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2b, 0x0a, 0x02,
	0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x39,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x48,
	0x00, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x03, 0x0a, 0x01, 0x74, 0x22, 0x1e,
	0x0a, 0x02, 0x4f, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x54, 0x10, 0x02, 0x22, 0xec,
	0x01, 0x0a, 0x10, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2a, 0x8f, 0x01,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41,
	0x54, 0x41, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x55, 0x38, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x31, 0x36, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x33, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x36,
	0x34, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x38, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x31, 0x36, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x33, 0x32, 0x10, 0x07, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x36, 0x34, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x33, 0x32, 0x10, 0x09, 0x12,
	0x07, 0x0a, 0x03, 0x46, 0x36, 0x34, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x0c, 0x42,
	0x8c, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x42,
	0x10, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x65, 0x6c, 0x61, 0x6e, 0x65, 0x79, 0x6a, 0x2f, 0x67, 0x65, 0x63, 0x6b, 0x2f, 0x70, 0x62,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x65, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x65, 0x63,
	0x6b, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x47, 0x65, 0x63, 0x6b,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x07, 0x47, 0x65, 0x63, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13,
	0x47, 0x65, 0x63, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x47, 0x65, 0x63, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geck_v1_definitions_proto_rawDescOnce sync.Once
	file_geck_v1_definitions_proto_rawDescData = file_geck_v1_definitions_proto_rawDesc
)

func file_geck_v1_definitions_proto_rawDescGZIP() []byte {
	file_geck_v1_definitions_proto_rawDescOnce.Do(func() {
		file_geck_v1_definitions_proto_rawDescData = protoimpl.X.CompressGZIP(file_geck_v1_definitions_proto_rawDescData)
	})
	return file_geck_v1_definitions_proto_rawDescData
}

var file_geck_v1_definitions_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_geck_v1_definitions_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_geck_v1_definitions_proto_goTypes = []interface{}{
	(DataType)(0),                  // 0: geck.v1.DataType
	(QueryDefinition_Op)(0),        // 1: geck.v1.QueryDefinition.Op
	(*FieldDefinition)(nil),        // 2: geck.v1.FieldDefinition
	(*ComponentDefinition)(nil),    // 3: geck.v1.ComponentDefinition
	(*StateDefinition)(nil),        // 4: geck.v1.StateDefinition
	(*QueryDefinition)(nil),        // 5: geck.v1.QueryDefinition
	(*BundleDefinition)(nil),       // 6: geck.v1.BundleDefinition
	(*QueryDefinition_Term)(nil),   // 7: geck.v1.QueryDefinition.Term
	(*QueryDefinition_Groups)(nil), // 8: geck.v1.QueryDefinition.Groups
	(*QueryDefinition_Group)(nil),  // 9: geck.v1.QueryDefinition.Group
}
var file_geck_v1_definitions_proto_depIdxs = []int32{
	0,  // 0: geck.v1.FieldDefinition.type:type_name -> geck.v1.DataType
	2,  // 1: geck.v1.ComponentDefinition.fields:type_name -> geck.v1.FieldDefinition
	9,  // 2: geck.v1.QueryDefinition.group:type_name -> geck.v1.QueryDefinition.Group
	3,  // 3: geck.v1.BundleDefinition.components:type_name -> geck.v1.ComponentDefinition
	4,  // 4: geck.v1.BundleDefinition.states:type_name -> geck.v1.StateDefinition
	5,  // 5: geck.v1.BundleDefinition.queries:type_name -> geck.v1.QueryDefinition
	9,  // 6: geck.v1.QueryDefinition.Groups.groups:type_name -> geck.v1.QueryDefinition.Group
	1,  // 7: geck.v1.QueryDefinition.Group.op:type_name -> geck.v1.QueryDefinition.Op
	7,  // 8: geck.v1.QueryDefinition.Group.term:type_name -> geck.v1.QueryDefinition.Term
	8,  // 9: geck.v1.QueryDefinition.Group.groups:type_name -> geck.v1.QueryDefinition.Groups
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_geck_v1_definitions_proto_init() }
func file_geck_v1_definitions_proto_init() {
	if File_geck_v1_definitions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geck_v1_definitions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition_Term); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition_Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_geck_v1_definitions_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*QueryDefinition_Group_Term)(nil),
		(*QueryDefinition_Group_Groups)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geck_v1_definitions_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_geck_v1_definitions_proto_goTypes,
		DependencyIndexes: file_geck_v1_definitions_proto_depIdxs,
		EnumInfos:         file_geck_v1_definitions_proto_enumTypes,
		MessageInfos:      file_geck_v1_definitions_proto_msgTypes,
	}.Build()
	File_geck_v1_definitions_proto = out.File
	file_geck_v1_definitions_proto_rawDesc = nil
	file_geck_v1_definitions_proto_goTypes = nil
	file_geck_v1_definitions_proto_depIdxs = nil
}
