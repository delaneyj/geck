// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: geck/v1/definitions.proto

package geckpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryDefinition_Op int32

const (
	QueryDefinition_AND QueryDefinition_Op = 0
	QueryDefinition_OR  QueryDefinition_Op = 1
	QueryDefinition_NOT QueryDefinition_Op = 2
)

// Enum value maps for QueryDefinition_Op.
var (
	QueryDefinition_Op_name = map[int32]string{
		0: "AND",
		1: "OR",
		2: "NOT",
	}
	QueryDefinition_Op_value = map[string]int32{
		"AND": 0,
		"OR":  1,
		"NOT": 2,
	}
)

func (x QueryDefinition_Op) Enum() *QueryDefinition_Op {
	p := new(QueryDefinition_Op)
	*p = x
	return p
}

func (x QueryDefinition_Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryDefinition_Op) Descriptor() protoreflect.EnumDescriptor {
	return file_geck_v1_definitions_proto_enumTypes[0].Descriptor()
}

func (QueryDefinition_Op) Type() protoreflect.EnumType {
	return &file_geck_v1_definitions_proto_enumTypes[0]
}

func (x QueryDefinition_Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryDefinition_Op.Descriptor instead.
func (QueryDefinition_Op) EnumDescriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 0}
}

type FieldDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsDeprecated bool   `protobuf:"varint,4,opt,name=is_deprecated,json=isDeprecated,proto3" json:"is_deprecated,omitempty"`
	Order        int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	// Types that are assignable to ResetValue:
	//
	//	*FieldDefinition_U8
	//	*FieldDefinition_U16
	//	*FieldDefinition_U32
	//	*FieldDefinition_U64
	//	*FieldDefinition_I8
	//	*FieldDefinition_I16
	//	*FieldDefinition_I32
	//	*FieldDefinition_I64
	//	*FieldDefinition_F32
	//	*FieldDefinition_F64
	//	*FieldDefinition_Txt
	//	*FieldDefinition_Bin
	ResetValue isFieldDefinition_ResetValue `protobuf_oneof:"reset_value"`
}

func (x *FieldDefinition) Reset() {
	*x = FieldDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDefinition) ProtoMessage() {}

func (x *FieldDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDefinition.ProtoReflect.Descriptor instead.
func (*FieldDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{0}
}

func (x *FieldDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldDefinition) GetIsDeprecated() bool {
	if x != nil {
		return x.IsDeprecated
	}
	return false
}

func (x *FieldDefinition) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (m *FieldDefinition) GetResetValue() isFieldDefinition_ResetValue {
	if m != nil {
		return m.ResetValue
	}
	return nil
}

func (x *FieldDefinition) GetU8() uint32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_U8); ok {
		return x.U8
	}
	return 0
}

func (x *FieldDefinition) GetU16() uint32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_U16); ok {
		return x.U16
	}
	return 0
}

func (x *FieldDefinition) GetU32() uint32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_U32); ok {
		return x.U32
	}
	return 0
}

func (x *FieldDefinition) GetU64() uint64 {
	if x, ok := x.GetResetValue().(*FieldDefinition_U64); ok {
		return x.U64
	}
	return 0
}

func (x *FieldDefinition) GetI8() int32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_I8); ok {
		return x.I8
	}
	return 0
}

func (x *FieldDefinition) GetI16() int32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_I16); ok {
		return x.I16
	}
	return 0
}

func (x *FieldDefinition) GetI32() int32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_I32); ok {
		return x.I32
	}
	return 0
}

func (x *FieldDefinition) GetI64() int64 {
	if x, ok := x.GetResetValue().(*FieldDefinition_I64); ok {
		return x.I64
	}
	return 0
}

func (x *FieldDefinition) GetF32() float32 {
	if x, ok := x.GetResetValue().(*FieldDefinition_F32); ok {
		return x.F32
	}
	return 0
}

func (x *FieldDefinition) GetF64() float64 {
	if x, ok := x.GetResetValue().(*FieldDefinition_F64); ok {
		return x.F64
	}
	return 0
}

func (x *FieldDefinition) GetTxt() string {
	if x, ok := x.GetResetValue().(*FieldDefinition_Txt); ok {
		return x.Txt
	}
	return ""
}

func (x *FieldDefinition) GetBin() []byte {
	if x, ok := x.GetResetValue().(*FieldDefinition_Bin); ok {
		return x.Bin
	}
	return nil
}

type isFieldDefinition_ResetValue interface {
	isFieldDefinition_ResetValue()
}

type FieldDefinition_U8 struct {
	U8 uint32 `protobuf:"varint,6,opt,name=u8,proto3,oneof"`
}

type FieldDefinition_U16 struct {
	U16 uint32 `protobuf:"varint,7,opt,name=u16,proto3,oneof"`
}

type FieldDefinition_U32 struct {
	U32 uint32 `protobuf:"varint,8,opt,name=u32,proto3,oneof"`
}

type FieldDefinition_U64 struct {
	U64 uint64 `protobuf:"varint,9,opt,name=u64,proto3,oneof"`
}

type FieldDefinition_I8 struct {
	I8 int32 `protobuf:"zigzag32,10,opt,name=i8,proto3,oneof"`
}

type FieldDefinition_I16 struct {
	I16 int32 `protobuf:"zigzag32,11,opt,name=i16,proto3,oneof"`
}

type FieldDefinition_I32 struct {
	I32 int32 `protobuf:"zigzag32,12,opt,name=i32,proto3,oneof"`
}

type FieldDefinition_I64 struct {
	I64 int64 `protobuf:"zigzag64,13,opt,name=i64,proto3,oneof"`
}

type FieldDefinition_F32 struct {
	F32 float32 `protobuf:"fixed32,14,opt,name=f32,proto3,oneof"`
}

type FieldDefinition_F64 struct {
	F64 float64 `protobuf:"fixed64,15,opt,name=f64,proto3,oneof"`
}

type FieldDefinition_Txt struct {
	Txt string `protobuf:"bytes,16,opt,name=txt,proto3,oneof"`
}

type FieldDefinition_Bin struct {
	Bin []byte `protobuf:"bytes,17,opt,name=bin,proto3,oneof"`
}

func (*FieldDefinition_U8) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_U16) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_U32) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_U64) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_I8) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_I16) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_I32) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_I64) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_F32) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_F64) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_Txt) isFieldDefinition_ResetValue() {}

func (*FieldDefinition_Bin) isFieldDefinition_ResetValue() {}

type ComponentDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsDeprecated bool               `protobuf:"varint,3,opt,name=is_deprecated,json=isDeprecated,proto3" json:"is_deprecated,omitempty"`
	CanBePair    bool               `protobuf:"varint,4,opt,name=can_be_pair,json=canBePair,proto3" json:"can_be_pair,omitempty"`
	Fields       []*FieldDefinition `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ComponentDefinition) Reset() {
	*x = ComponentDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDefinition) ProtoMessage() {}

func (x *ComponentDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDefinition.ProtoReflect.Descriptor instead.
func (*ComponentDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{1}
}

func (x *ComponentDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComponentDefinition) GetIsDeprecated() bool {
	if x != nil {
		return x.IsDeprecated
	}
	return false
}

func (x *ComponentDefinition) GetCanBePair() bool {
	if x != nil {
		return x.CanBePair
	}
	return false
}

func (x *ComponentDefinition) GetFields() []*FieldDefinition {
	if x != nil {
		return x.Fields
	}
	return nil
}

type StateDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	States      []string `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *StateDefinition) Reset() {
	*x = StateDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDefinition) ProtoMessage() {}

func (x *StateDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDefinition.ProtoReflect.Descriptor instead.
func (*StateDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{2}
}

func (x *StateDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StateDefinition) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

type QueryDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Group       *QueryDefinition_Group `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *QueryDefinition) Reset() {
	*x = QueryDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition) ProtoMessage() {}

func (x *QueryDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition.ProtoReflect.Descriptor instead.
func (*QueryDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3}
}

func (x *QueryDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QueryDefinition) GetGroup() *QueryDefinition_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type BundleDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Components  []*ComponentDefinition `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
	States      []*StateDefinition     `protobuf:"bytes,4,rep,name=states,proto3" json:"states,omitempty"`
	Queries     []*QueryDefinition     `protobuf:"bytes,5,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *BundleDefinition) Reset() {
	*x = BundleDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleDefinition) ProtoMessage() {}

func (x *BundleDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleDefinition.ProtoReflect.Descriptor instead.
func (*BundleDefinition) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{4}
}

func (x *BundleDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BundleDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BundleDefinition) GetComponents() []*ComponentDefinition {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *BundleDefinition) GetStates() []*StateDefinition {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *BundleDefinition) GetQueries() []*QueryDefinition {
	if x != nil {
		return x.Queries
	}
	return nil
}

type QueryDefinition_Term struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityName   string `protobuf:"bytes,1,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	VariableName string `protobuf:"bytes,2,opt,name=variable_name,json=variableName,proto3" json:"variable_name,omitempty"`
	IsMutable    bool   `protobuf:"varint,3,opt,name=is_mutable,json=isMutable,proto3" json:"is_mutable,omitempty"`
	IsOptional   bool   `protobuf:"varint,4,opt,name=is_optional,json=isOptional,proto3" json:"is_optional,omitempty"`
}

func (x *QueryDefinition_Term) Reset() {
	*x = QueryDefinition_Term{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition_Term) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition_Term) ProtoMessage() {}

func (x *QueryDefinition_Term) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition_Term.ProtoReflect.Descriptor instead.
func (*QueryDefinition_Term) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 0}
}

func (x *QueryDefinition_Term) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *QueryDefinition_Term) GetVariableName() string {
	if x != nil {
		return x.VariableName
	}
	return ""
}

func (x *QueryDefinition_Term) GetIsMutable() bool {
	if x != nil {
		return x.IsMutable
	}
	return false
}

func (x *QueryDefinition_Term) GetIsOptional() bool {
	if x != nil {
		return x.IsOptional
	}
	return false
}

type QueryDefinition_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op     QueryDefinition_Op       `protobuf:"varint,1,opt,name=op,proto3,enum=geck.v1.QueryDefinition_Op" json:"op,omitempty"`
	Terms  []*QueryDefinition_Term  `protobuf:"bytes,2,rep,name=terms,proto3" json:"terms,omitempty"`
	Groups []*QueryDefinition_Group `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *QueryDefinition_Group) Reset() {
	*x = QueryDefinition_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geck_v1_definitions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefinition_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefinition_Group) ProtoMessage() {}

func (x *QueryDefinition_Group) ProtoReflect() protoreflect.Message {
	mi := &file_geck_v1_definitions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefinition_Group.ProtoReflect.Descriptor instead.
func (*QueryDefinition_Group) Descriptor() ([]byte, []int) {
	return file_geck_v1_definitions_proto_rawDescGZIP(), []int{3, 1}
}

func (x *QueryDefinition_Group) GetOp() QueryDefinition_Op {
	if x != nil {
		return x.Op
	}
	return QueryDefinition_AND
}

func (x *QueryDefinition_Group) GetTerms() []*QueryDefinition_Term {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *QueryDefinition_Group) GetGroups() []*QueryDefinition_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_geck_v1_definitions_proto protoreflect.FileDescriptor

var file_geck_v1_definitions_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x65, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x65, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x22, 0xfd, 0x02, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x02, 0x75, 0x38, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x75, 0x38, 0x12, 0x12, 0x0a, 0x03, 0x75,
	0x31, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x75, 0x31, 0x36, 0x12,
	0x12, 0x0a, 0x03, 0x75, 0x33, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03,
	0x75, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x36, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x03, 0x75, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x38, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x02, 0x69, 0x38, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x31, 0x36,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x03, 0x69, 0x31, 0x36, 0x12, 0x12, 0x0a,
	0x03, 0x69, 0x33, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x03, 0x69, 0x33,
	0x32, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00,
	0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x03, 0x66, 0x33, 0x32, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x00, 0x52, 0x03, 0x66, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x03, 0x66, 0x36, 0x34,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x03, 0x66, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x03, 0x74, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x74, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x03, 0x62, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x03, 0x62, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x62,
	0x65, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61,
	0x6e, 0x42, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xd0, 0x03, 0x0a, 0x0f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x8c, 0x01, 0x0a, 0x04, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x1a, 0xa1, 0x01, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x2b, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70,
	0x12, 0x33, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x05,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x1e, 0x0a,
	0x02, 0x4f, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x54, 0x10, 0x02, 0x22, 0xec, 0x01,
	0x0a, 0x10, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x8c, 0x01, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x6c,
	0x61, 0x6e, 0x65, 0x79, 0x6a, 0x2f, 0x67, 0x65, 0x63, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x65, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x65, 0x63, 0x6b, 0x70, 0x62,
	0xa2, 0x02, 0x03, 0x47, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x47, 0x65, 0x63, 0x6b, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x07, 0x47, 0x65, 0x63, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x47, 0x65, 0x63,
	0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x08, 0x47, 0x65, 0x63, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_geck_v1_definitions_proto_rawDescOnce sync.Once
	file_geck_v1_definitions_proto_rawDescData = file_geck_v1_definitions_proto_rawDesc
)

func file_geck_v1_definitions_proto_rawDescGZIP() []byte {
	file_geck_v1_definitions_proto_rawDescOnce.Do(func() {
		file_geck_v1_definitions_proto_rawDescData = protoimpl.X.CompressGZIP(file_geck_v1_definitions_proto_rawDescData)
	})
	return file_geck_v1_definitions_proto_rawDescData
}

var file_geck_v1_definitions_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_geck_v1_definitions_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_geck_v1_definitions_proto_goTypes = []interface{}{
	(QueryDefinition_Op)(0),       // 0: geck.v1.QueryDefinition.Op
	(*FieldDefinition)(nil),       // 1: geck.v1.FieldDefinition
	(*ComponentDefinition)(nil),   // 2: geck.v1.ComponentDefinition
	(*StateDefinition)(nil),       // 3: geck.v1.StateDefinition
	(*QueryDefinition)(nil),       // 4: geck.v1.QueryDefinition
	(*BundleDefinition)(nil),      // 5: geck.v1.BundleDefinition
	(*QueryDefinition_Term)(nil),  // 6: geck.v1.QueryDefinition.Term
	(*QueryDefinition_Group)(nil), // 7: geck.v1.QueryDefinition.Group
}
var file_geck_v1_definitions_proto_depIdxs = []int32{
	1, // 0: geck.v1.ComponentDefinition.fields:type_name -> geck.v1.FieldDefinition
	7, // 1: geck.v1.QueryDefinition.group:type_name -> geck.v1.QueryDefinition.Group
	2, // 2: geck.v1.BundleDefinition.components:type_name -> geck.v1.ComponentDefinition
	3, // 3: geck.v1.BundleDefinition.states:type_name -> geck.v1.StateDefinition
	4, // 4: geck.v1.BundleDefinition.queries:type_name -> geck.v1.QueryDefinition
	0, // 5: geck.v1.QueryDefinition.Group.op:type_name -> geck.v1.QueryDefinition.Op
	6, // 6: geck.v1.QueryDefinition.Group.terms:type_name -> geck.v1.QueryDefinition.Term
	7, // 7: geck.v1.QueryDefinition.Group.groups:type_name -> geck.v1.QueryDefinition.Group
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_geck_v1_definitions_proto_init() }
func file_geck_v1_definitions_proto_init() {
	if File_geck_v1_definitions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geck_v1_definitions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition_Term); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geck_v1_definitions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefinition_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_geck_v1_definitions_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FieldDefinition_U8)(nil),
		(*FieldDefinition_U16)(nil),
		(*FieldDefinition_U32)(nil),
		(*FieldDefinition_U64)(nil),
		(*FieldDefinition_I8)(nil),
		(*FieldDefinition_I16)(nil),
		(*FieldDefinition_I32)(nil),
		(*FieldDefinition_I64)(nil),
		(*FieldDefinition_F32)(nil),
		(*FieldDefinition_F64)(nil),
		(*FieldDefinition_Txt)(nil),
		(*FieldDefinition_Bin)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geck_v1_definitions_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_geck_v1_definitions_proto_goTypes,
		DependencyIndexes: file_geck_v1_definitions_proto_depIdxs,
		EnumInfos:         file_geck_v1_definitions_proto_enumTypes,
		MessageInfos:      file_geck_v1_definitions_proto_msgTypes,
	}.Build()
	File_geck_v1_definitions_proto = out.File
	file_geck_v1_definitions_proto_rawDesc = nil
	file_geck_v1_definitions_proto_goTypes = nil
	file_geck_v1_definitions_proto_depIdxs = nil
}
