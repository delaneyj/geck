// Code generated by qtc from "templ_templates.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// package generator
//

//line generator/templ_templates.qtpl:3
package generator

//line generator/templ_templates.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line generator/templ_templates.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line generator/templ_templates.qtpl:3
func streamtemplTemplate(qw422016 *qt422016.Writer, data *ecsTmplData) {
//line generator/templ_templates.qtpl:3
	qw422016.N().S(`

package `)
//line generator/templ_templates.qtpl:5
	qw422016.E().S(data.PackageName)
//line generator/templ_templates.qtpl:5
	qw422016.N().S(`
import(
    "fmt"
    "reflect"
)

templ SparseSetView[T any](ss *SparseSet[T]) {
<html>
<head>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@4.12.13/dist/full.min.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="p-4">
    {{
        var zero T
        name := reflect.TypeOf(zero).Name()
    }}
    <div>Hello { name } SparseSet View</div>
    if ss == nil || ss.Len() == 0 {
        <div>Empty SparseSet</div>
    } else {
        <div class="flex flex-wrap">
        for _, idx := range ss.sparse {
            <div class="border p-4">
                <div class="text-lg font-bold">{ fmt.Sprint(idx) }</div>
            </div>
        }
        </div>
    }
</body>
</html>
}
`)
//line generator/templ_templates.qtpl:38
}

//line generator/templ_templates.qtpl:38
func writetemplTemplate(qq422016 qtio422016.Writer, data *ecsTmplData) {
//line generator/templ_templates.qtpl:38
	qw422016 := qt422016.AcquireWriter(qq422016)
//line generator/templ_templates.qtpl:38
	streamtemplTemplate(qw422016, data)
//line generator/templ_templates.qtpl:38
	qt422016.ReleaseWriter(qw422016)
//line generator/templ_templates.qtpl:38
}

//line generator/templ_templates.qtpl:38
func templTemplate(data *ecsTmplData) string {
//line generator/templ_templates.qtpl:38
	qb422016 := qt422016.AcquireByteBuffer()
//line generator/templ_templates.qtpl:38
	writetemplTemplate(qb422016, data)
//line generator/templ_templates.qtpl:38
	qs422016 := string(qb422016.B)
//line generator/templ_templates.qtpl:38
	qt422016.ReleaseByteBuffer(qb422016)
//line generator/templ_templates.qtpl:38
	return qs422016
//line generator/templ_templates.qtpl:38
}
