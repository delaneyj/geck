// Code generated by qtc from "world_go.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// package generator
//
//

//line generator/world_go.qtpl:4
package generator

//line generator/world_go.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line generator/world_go.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line generator/world_go.qtpl:4
func streamworldTemplate(qw422016 *qt422016.Writer, data *ecsTmplData) {
//line generator/world_go.qtpl:4
	qw422016.N().S(`package `)
//line generator/world_go.qtpl:5
	qw422016.E().S(data.PackageName)
//line generator/world_go.qtpl:5
	qw422016.N().S(`

import (
    "github.com/RoaringBitmap/roaring"
    "github.com/btvoidx/mint"
)

type empty struct{}

type World struct{
    nextEntityID uint32
    livingEntities,freeEntities *SparseSet[empty]
    resourceEntity Entity
    systems []SystemTicker
    eventBus *mint.Emitter

    // Tags
`)
//line generator/world_go.qtpl:22
	for _, c := range data.Components {
//line generator/world_go.qtpl:23
		if c.IsTag {
//line generator/world_go.qtpl:23
			qw422016.N().S(`    `)
//line generator/world_go.qtpl:24
			qw422016.E().S(c.Name.Singular.Camel)
//line generator/world_go.qtpl:24
			qw422016.N().S(`Tags *SparseSet[empty]
`)
//line generator/world_go.qtpl:25
		}
//line generator/world_go.qtpl:26
	}
//line generator/world_go.qtpl:26
	qw422016.N().S(`
    // Components
`)
//line generator/world_go.qtpl:29
	for _, c := range data.Components {
//line generator/world_go.qtpl:30
		if !c.IsTag {
//line generator/world_go.qtpl:30
			qw422016.N().S(`    `)
//line generator/world_go.qtpl:31
			qw422016.E().S(c.Name.Singular.Camel)
//line generator/world_go.qtpl:31
			qw422016.N().S(`Components *SparseSet[`)
//line generator/world_go.qtpl:31
			qw422016.E().S(c.Name.Singular.Pascal)
//line generator/world_go.qtpl:31
			qw422016.N().S(`Component]
`)
//line generator/world_go.qtpl:32
		}
//line generator/world_go.qtpl:33
	}
//line generator/world_go.qtpl:33
	qw422016.N().S(`}

func NewWorld() *World{
    w := &World{
        nextEntityID: 0,
        livingEntities: NewSparseSet[empty](),
        freeEntities: NewSparseSet[empty](),
        eventBus: &mint.Emitter{},

        // Initialize tags
`)
//line generator/world_go.qtpl:44
	for _, c := range data.Components {
//line generator/world_go.qtpl:45
		if c.IsTag {
//line generator/world_go.qtpl:45
			qw422016.N().S(`                `)
//line generator/world_go.qtpl:46
			qw422016.E().S(c.Name.Singular.Camel)
//line generator/world_go.qtpl:46
			qw422016.N().S(`Tags : NewSparseSet[empty](),
`)
//line generator/world_go.qtpl:47
		}
//line generator/world_go.qtpl:48
	}
//line generator/world_go.qtpl:48
	qw422016.N().S(`

        // Initialize components
`)
//line generator/world_go.qtpl:52
	for _, c := range data.Components {
//line generator/world_go.qtpl:53
		if !c.IsTag {
//line generator/world_go.qtpl:53
			qw422016.N().S(`                `)
//line generator/world_go.qtpl:54
			qw422016.E().S(c.Name.Singular.Camel)
//line generator/world_go.qtpl:54
			qw422016.N().S(`Components: NewSparseSet[`)
//line generator/world_go.qtpl:54
			qw422016.E().S(c.Name.Singular.Pascal)
//line generator/world_go.qtpl:54
			qw422016.N().S(`Component](),
`)
//line generator/world_go.qtpl:55
		}
//line generator/world_go.qtpl:56
	}
//line generator/world_go.qtpl:56
	qw422016.N().S(`    }
    w.resourceEntity = w.CreateEntity()




    return w
}

func(w *World)  AddSystems(systems ...System) error{
    for _, s := range systems{
        if err := s.Initialize(w); err != nil{
            return fmt.Errorf("failed to initialize system: %w", err)
        }

        sysTicker, ok := s.(SystemTicker)
        if !ok{
            continue
        }

        w.systems = append(w.systems, sysTicker)
    }

    return nil
}

func (w *World) Tick() error{
    for _, s := range w.systems{
        if err := s.Tick(w); err != nil{
            return err
        }
    }
    return nil
}

type System interface{
    Initialize(w *World) error
    ReliesOn( func(reliedOn System) bool)
}

type SystemTicker interface{
    System
    Tick(w *World) error
}

`)
//line generator/world_go.qtpl:102
}

//line generator/world_go.qtpl:102
func writeworldTemplate(qq422016 qtio422016.Writer, data *ecsTmplData) {
//line generator/world_go.qtpl:102
	qw422016 := qt422016.AcquireWriter(qq422016)
//line generator/world_go.qtpl:102
	streamworldTemplate(qw422016, data)
//line generator/world_go.qtpl:102
	qt422016.ReleaseWriter(qw422016)
//line generator/world_go.qtpl:102
}

//line generator/world_go.qtpl:102
func worldTemplate(data *ecsTmplData) string {
//line generator/world_go.qtpl:102
	qb422016 := qt422016.AcquireByteBuffer()
//line generator/world_go.qtpl:102
	writeworldTemplate(qb422016, data)
//line generator/world_go.qtpl:102
	qs422016 := string(qb422016.B)
//line generator/world_go.qtpl:102
	qt422016.ReleaseByteBuffer(qb422016)
//line generator/world_go.qtpl:102
	return qs422016
//line generator/world_go.qtpl:102
}
